[tool.poetry]
name = "fastapi-do-zero"
version = "0.1.0"
description = ""
authors = ["RWallan <3am.richardwallan@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.110.1"
uvicorn = {extras = ["standard"], version = "^0.29.0"}
pydantic = {extras = ["email"], version = "^2.6.4"}
sqlalchemy = "^2.0.29"
pydantic-settings = "^2.2.1"
alembic = "^1.13.1"


[tool.poetry.group.dev.dependencies]
taskipy = "^1.12.2"
ruff = "^0.3.5"
black = "^24.3.0"
isort = "^5.13.2"
pytest = "^8.1.1"
pytest-cov = "^5.0.0"
httpx = "^0.27.0"
pre-commit = "^3.7.0"
pytest-asyncio = "^0.23.6"
aiosqlite = "^0.20.0"
gevent = "^24.2.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 79
exclude = [".venv", "migrations"]

[tool.isort]
line_length = 79
profile = "black"
extend_skip = ["migrations"]

[tool.black]
line-length = 79
extend-exclude = "(migrations/)"

[tool.pytest.ini_options]
pythonpath = "."
addopts = "-p no:warnings"

[tool.coverage.run]
concurrency = ["gevent"]

[tool.taskipy.tasks]
lint = "ruff check && black --check . --diff && isort --check . --diff"
format = "black . && isort ."
run = "uvicorn fastapi_do_zero.app:app --reload"
pre_test = "task lint"
test = "pytest -s -x -vv --cov=fastapi_do_zero"
post_test = "coverage html"
